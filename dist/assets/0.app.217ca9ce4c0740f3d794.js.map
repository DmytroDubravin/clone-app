{"version":3,"sources":["webpack:///./node_modules/moment/locale sync [\\/\\\\](de(\\.js)","webpack:///./src/constants.js","webpack:///./src/messages.js","webpack:///./src/components/entry-point/entry-point.js","webpack:///./src/index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","PERMISSIONS","ManageProducts","ViewProducts","FEATURE_FLAGS","loadMessages","lang","loadAppI18nPromise","then","result","default","error","console","warn","AsyncApplicationRoutes","React","lazy","ApplicationStarter","path","component","displayName","setupGlobalErrorListener","EntryPoint","environment","window","app","onRegisterErrorListeners","dispatch","Sdk","Get","errorHandler","globalActions","applicationMessages","DEV_ONLY__loadNavbarMenuConfig","data","featureFlags","render","Component","ReactDOM","document","getElementById"],"mappings":"6LAAA,IAAIA,EAAM,CACT,OAAQ,qCACR,UAAW,qCACX,OAAQ,qCACR,UAAW,qCACX,OAAQ,qCACR,UAAW,qCACX,OAAQ,qCACR,UAAW,qCACX,UAAW,wCACX,aAAc,yCAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,qH,kDC/BpB,oEAAO,IAAMY,EAAc,CACzBC,eAAgB,iBAChBC,aAAc,gBAGHC,EAAgB,I,igCC4BdC,EAjCM,SAAAC,GACnB,IAAIC,EACJ,OAAQD,GACN,IAAK,KACHC,EAAqB,wDAGrB,MACF,IAAK,KACHA,EAAqB,wDAGrB,MACF,QACEA,EAAqB,wDAKzB,OAAOA,EAAmBC,MACxB,SAAAC,GAAM,OAAIA,EAAOC,WACjB,SAAAC,GAOE,OALAC,QAAQC,KAAR,kEAC6DP,GAC3DK,GAGK,O,svBCbb,IAAMG,EAAyBC,IAAMC,MAAK,kBACxC,gDAGWC,EAAqB,kBAChC,YAAC,IAAD,KAG0C,KAOxC,YAAC,IAAD,CACEC,KAAK,gCACLC,UAAWL,IAGb,YAAC,IAAD,QAGJG,EAAmBG,YAAc,qBAIjCC,c,IAEMC,E,+bAGF,OACE,YAAC,IAAD,CACEC,YAAaC,OAAOC,IACpBC,yBAA0B,YAAkB,IAAfC,EAAe,EAAfA,SAC3BC,IAAIC,IAAIC,aAAe,SAAAnB,GAAK,OAC1BoB,IAAgCpB,EAAO,MAAvCoB,CAA8CJ,KAElDK,oBAAqB3B,EACrB4B,+BAAgC,kBAC9B,6CAA6BzB,MAAK,SAAA0B,GAAI,OAAIA,EAAKxB,SAAWwB,MAE5DC,aAAc/B,IACdgC,OAAQ,kBAAM,YAAC,EAAD,c,8BAfGrB,IAAMsB,WAAzBf,EACGF,YAAc,aAoBRE,QC7DfgB,IAASF,OAAO,YAAC,EAAD,MAAgBG,SAASC,eAAe,S","file":"0.app.217ca9ce4c0740f3d794.js","sourcesContent":["var map = {\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive [\\\\/\\\\\\\\](de(\\\\.js)?|es(\\\\.js)?|fr(\\\\.js)?|zh-cn(\\\\.js)?|ja(\\\\.js)?)$\";","export const PERMISSIONS = {\r\n  ManageProducts: 'ManageProducts',\r\n  ViewProducts: 'ViewProducts',\r\n};\r\n\r\nexport const FEATURE_FLAGS = {};\r\n","const loadMessages = lang => {\r\n  let loadAppI18nPromise;\r\n  switch (lang) {\r\n    case 'de':\r\n      loadAppI18nPromise = import(\r\n        './i18n/data/de.json' /* webpackChunkName: \"app-i18n-de\" */\r\n      );\r\n      break;\r\n    case 'es':\r\n      loadAppI18nPromise = import(\r\n        './i18n/data/es.json' /* webpackChunkName: \"app-i18n-es\" */\r\n      );\r\n      break;\r\n    default:\r\n      loadAppI18nPromise = import(\r\n        './i18n/data/en.json' /* webpackChunkName: \"app-i18n-en\" */\r\n      );\r\n  }\r\n\r\n  return loadAppI18nPromise.then(\r\n    result => result.default,\r\n    error => {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        `Something went wrong while loading the app messages for ${lang}`,\r\n        error\r\n      );\r\n\r\n      return {};\r\n    }\r\n  );\r\n};\r\n\r\nexport default loadMessages;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport {\r\n  ApplicationShell,\r\n  setupGlobalErrorListener,\r\n  RouteCatchAll,\r\n} from '@commercetools-frontend/application-shell';\r\nimport { Sdk } from '@commercetools-frontend/sdk';\r\nimport * as globalActions from '@commercetools-frontend/actions-global';\r\nimport { FEATURE_FLAGS } from '../../constants';\r\nimport loadMessages from '../../messages';\r\n\r\n// Here we split up the main (app) bundle with the actual application business logic.\r\n// Splitting by route is usually recommended and you can potentially have a splitting\r\n// point for each route. More info at https://reactjs.org/docs/code-splitting.html\r\nconst AsyncApplicationRoutes = React.lazy(() =>\r\n  import('../../routes' /* webpackChunkName: \"starter-routes\" */)\r\n);\r\n\r\nexport const ApplicationStarter = () => (\r\n  <Switch>\r\n    {/* For development, it's useful to redirect to the actual\r\n      application routes when you open the browser at http://localhost:3001 */\r\n    process.env.NODE_ENV === 'production' ? null : (\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/:projectKey\"\r\n        to=\"/:projectKey/examples-starter\"\r\n      />\r\n    )}\r\n    <Route\r\n      path=\"/:projectKey/examples-starter\"\r\n      component={AsyncApplicationRoutes}\r\n    />\r\n    {/* Catch-all route */}\r\n    <RouteCatchAll />\r\n  </Switch>\r\n);\r\nApplicationStarter.displayName = 'ApplicationStarter';\r\n\r\n// Ensure to setup the global error listener before any React component renders\r\n// in order to catch possible errors on rendering/mounting.\r\nsetupGlobalErrorListener();\r\n\r\nclass EntryPoint extends React.Component {\r\n  static displayName = 'EntryPoint';\r\n  render() {\r\n    return (\r\n      <ApplicationShell\r\n        environment={window.app}\r\n        onRegisterErrorListeners={({ dispatch }) => {\r\n          Sdk.Get.errorHandler = error =>\r\n            globalActions.handleActionError(error, 'sdk')(dispatch);\r\n        }}\r\n        applicationMessages={loadMessages}\r\n        DEV_ONLY__loadNavbarMenuConfig={() =>\r\n          import('../../../menu.json').then(data => data.default || data)\r\n        }\r\n        featureFlags={FEATURE_FLAGS}\r\n        render={() => <ApplicationStarter />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EntryPoint;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport EntryPoint from './components/entry-point';\r\n\r\nReactDOM.render(<EntryPoint />, document.getElementById('app'));\r\n"],"sourceRoot":""}